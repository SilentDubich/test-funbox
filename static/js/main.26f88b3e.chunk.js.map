{"version":3,"sources":["common.module.css","Components/card.tsx","App.tsx","serviceWorker.ts","Redux/api.ts","Redux/Reducers/cardReducer.ts","Redux/store.ts","index.tsx","img/cat.png"],"names":["module","exports","Card","props","useState","selected","setSelected","mouseLeave","setMouseLeave","isCan","setIsCan","gifts","card","data","map","el","availableDescr","descriptions","available","footer","split","cardClassesDef","SCommon","container_card__margins","container_cardFigure","container_cardFigure__default","cardCornerDef","container_cornerBorder__square","container_colorItems__default","cardLeftLineDef","container_lineLeft__squarePosition","container_line__square","cardBottomLineDef","container_lineBot__squarePosition","cardWeightBackDef","container_weight__decor","cardClassesSel","container_cardFigure__selected","cardCornerSel","container_colorItems__selected","cardLeftLineSel","cardBottomLineSel","cardWeightBackSel","cardClassesOut","container_cardFigureOutOff","cardCornerOut","container_colorItems__OutOff","cardLeftLineOut","cardBottomLineOut","cardWeightBackOut","setSelect","leaveMouse","console","log","overMouse","onMouseLeave","onMouseOver","onClick","onTouchEndCapture","className","isAvailable","outOff__opacity","box_header__decor","box_headerSelectedHover__decor","header","box_name__decor","name","box_name__taste","taste","box_descript__decor","portions","container_img__position","container_img__width","src","photo","alt","container_weight_number__font","weight","container_weight_unit__font","unit","footer_textSelected__decor","footer_textDef__center","footer_textDef__decor","splice","length","join","footer_textBuy__decor","footer_textOutOff__decor","outOff","AppWrapper","connect","state","cards","cardReducer","Cards","key","id","container__width","header_text__center","header_text__params","display__flex","Boolean","window","location","hostname","match","axios","create","withCredentials","baseURL","initialState","Cat","hover","allReducers","combineReducers","action","type","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.26f88b3e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container__width\":\"common_container__width__1o5Tp\",\"container_card__outOff\":\"common_container_card__outOff__3JGJs\",\"box_header__decor\":\"common_box_header__decor__qcW4R\",\"box_headerSelectedHover__decor\":\"common_box_headerSelectedHover__decor__3sUDR\",\"box_name__decor\":\"common_box_name__decor__1SxuG\",\"box_name__taste\":\"common_box_name__taste__2hwic\",\"box_descript__decor\":\"common_box_descript__decor__1URTQ\",\"display__flex\":\"common_display__flex__2BV4m\",\"header_text__center\":\"common_header_text__center__3y3Jq\",\"header_text__params\":\"common_header_text__params__2auMZ\",\"footer_textSelected__decor\":\"common_footer_textSelected__decor__1B_wm\",\"footer_textDef__decor\":\"common_footer_textDef__decor__35G8L\",\"footer_textDef__center\":\"common_footer_textDef__center__3m-1q\",\"footer_textBuy__decor\":\"common_footer_textBuy__decor__mb9g9\",\"footer_textOutOff__decor\":\"common_footer_textOutOff__decor__3QbSR\",\"container_weight__decor\":\"common_container_weight__decor__1B-Kt\",\"container_weight_number__font\":\"common_container_weight_number__font__29GqI\",\"container_weight_unit__font\":\"common_container_weight_unit__font__11sFf\",\"container_card__margins\":\"common_container_card__margins__30frO\",\"container_colorItems__default\":\"common_container_colorItems__default__N7TL1\",\"container_cardFigure\":\"common_container_cardFigure__2pVn5\",\"container_colorItems__selected\":\"common_container_colorItems__selected__2JRG_\",\"container_colorItems__OutOff\":\"common_container_colorItems__OutOff__3SuRY\",\"container_cardFigureOutOff\":\"common_container_cardFigureOutOff__1OKw6\",\"outOff__opacity\":\"common_outOff__opacity__1C6tH\",\"container_cardFigure__default\":\"common_container_cardFigure__default__3nw3P\",\"container_cardFigure__selected\":\"common_container_cardFigure__selected__V5P4b\",\"container_cornerBorder__square\":\"common_container_cornerBorder__square__2JLUt\",\"container_line__square\":\"common_container_line__square__2Okkx\",\"container_lineLeft__squarePosition\":\"common_container_lineLeft__squarePosition__1DhsR\",\"container_lineBot__squarePosition\":\"common_container_lineBot__squarePosition__2hLu1\",\"container_img__width\":\"common_container_img__width__c8emr\",\"container_img__position\":\"common_container_img__position__1aZSt\"};","import React, {FC, useState} from \"react\";\r\nimport {CardType} from \"../Redux/Reducers/cardReducer\";\r\nimport SCommon from \"../common.module.css\"\r\nimport {url} from \"inspector\";\r\n\r\ntype PropsType = {\r\n    card: CardType\r\n}\r\n\r\nexport const Card: FC<PropsType> = (props) => {\r\n    const [selected, setSelected] = useState(false)\r\n    const [mouseLeave, setMouseLeave] = useState(false)\r\n    const [isCan, setIsCan] = useState(false)\r\n    const gifts = props.card.data.gifts.map(el => <div><span>{el}</span></div>)\r\n    const availableDescr = props.card.data.descriptions.available.footer.split(' ')\r\n    const cardClassesDef = `${SCommon.container_card__margins} ${SCommon.container_cardFigure} ${SCommon.container_cardFigure__default}`\r\n    const cardCornerDef = `${SCommon.container_cornerBorder__square} ${SCommon.container_colorItems__default}`\r\n    const cardLeftLineDef = `${SCommon.container_lineLeft__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__default}`\r\n    const cardBottomLineDef = `${SCommon.container_lineBot__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__default}`\r\n    const cardWeightBackDef = `${SCommon.container_weight__decor} ${SCommon.container_colorItems__default} ${SCommon.container_colorItems__default}`\r\n    const cardClassesSel = `${SCommon.container_card__margins} ${SCommon.container_cardFigure} ${SCommon.container_cardFigure__selected}`\r\n    const cardCornerSel = `${SCommon.container_cornerBorder__square} ${SCommon.container_colorItems__selected}`\r\n    const cardLeftLineSel = `${SCommon.container_lineLeft__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__selected}`\r\n    const cardBottomLineSel = `${SCommon.container_lineBot__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__selected}`\r\n    const cardWeightBackSel = `${SCommon.container_weight__decor} ${SCommon.container_colorItems__selected}`\r\n    const cardClassesOut = `${SCommon.container_card__margins} ${SCommon.container_cardFigure} ${SCommon.container_cardFigureOutOff}`\r\n    const cardCornerOut = `${SCommon.container_cornerBorder__square} ${SCommon.container_colorItems__OutOff}`\r\n    const cardLeftLineOut = `${SCommon.container_lineLeft__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__OutOff}`\r\n    const cardBottomLineOut = `${SCommon.container_lineBot__squarePosition} ${SCommon.container_line__square} ${SCommon.container_colorItems__OutOff}`\r\n    const cardWeightBackOut = `${SCommon.container_weight__decor} ${SCommon.container_colorItems__OutOff}`\r\n    const setSelect = () => {\r\n        setSelected(!selected)\r\n        setIsCan(false)\r\n        // debugger\r\n    }\r\n    const leaveMouse = () => {\r\n        setMouseLeave(true)\r\n        setIsCan(true)\r\n        console.log('out')\r\n        // debugger\r\n    }\r\n    const overMouse = () => {\r\n        setMouseLeave(false)\r\n    }\r\n    const forTouch = () => {\r\n        setSelected(!selected)\r\n        // setMouseLeave(true)\r\n        setIsCan(true)\r\n        // debugger\r\n    }\r\n    // debugger\r\n    return (\r\n        <div>\r\n            <div onMouseLeave={leaveMouse}\r\n                 onMouseOver={overMouse}\r\n                 onClick={setSelect}\r\n                 onTouchEndCapture={forTouch}\r\n                 className={props.card.isAvailable ? selected && isCan ? cardClassesSel : cardClassesDef : cardClassesOut}>\r\n                <div className={props.card.isAvailable ? selected && isCan ? cardCornerSel : cardCornerDef : cardCornerOut}></div>\r\n                <div className={props.card.isAvailable ? selected && isCan ? cardLeftLineSel : cardLeftLineDef : cardLeftLineOut}></div>\r\n                <div className={props.card.isAvailable ? selected && isCan ? cardBottomLineSel : cardBottomLineDef : cardBottomLineOut}></div>\r\n                <div className={`${!props.card.isAvailable && SCommon.outOff__opacity} ${SCommon.box_header__decor}`}>\r\n                    {props.card.isAvailable && !mouseLeave && isCan && selected ?\r\n                        <span className={SCommon.box_headerSelectedHover__decor}>Котэ не одобряет?</span> :\r\n                        <span>{props.card.data.descriptions.available.header}</span>}\r\n                </div>\r\n                <div className={`${!props.card.isAvailable && SCommon.outOff__opacity} ${SCommon.box_name__decor}`}><span>{props.card.data.name}</span></div>\r\n                <div className={`${!props.card.isAvailable && SCommon.outOff__opacity} ${SCommon.box_name__taste}`}><span>{props.card.data.taste}</span></div>\r\n                <div className={`${SCommon.box_descript__decor}`}>\r\n                    <div><span>{`${props.card.data.portions} порций`}</span></div>\r\n                    <div><span>{gifts}</span></div>\r\n                </div>\r\n                <div className={`${!props.card.isAvailable && SCommon.outOff__opacity} ${SCommon.container_img__position} `}><img\r\n                    className={`${SCommon.container_img__width}`} src={props.card.data.photo} alt=\"Котэ\"/></div>\r\n                <div className={props.card.isAvailable ? selected && isCan ? cardWeightBackSel : cardWeightBackDef : cardWeightBackOut}>\r\n                    <div className={`${SCommon.container_weight_number__font}`}><span>{props.card.data.weight}</span>\r\n                    </div>\r\n                    <div className={`${SCommon.container_weight_unit__font}`}><span>{props.card.data.unit}</span></div>\r\n                </div>\r\n            </div>\r\n            {props.card.isAvailable ? isCan && selected ? <div className={SCommon.footer_textSelected__decor}>\r\n                    <span>{props.card.data.descriptions.selected.footer}</span></div> :\r\n                <div className={SCommon.footer_textDef__center}>\r\n                    <span\r\n                        className={SCommon.footer_textDef__decor}>{availableDescr.splice(0, availableDescr.length - 1).join(' ')}</span>\r\n                    <span onMouseLeave={leaveMouse}\r\n                          onMouseOver={overMouse}\r\n                          onClick={setSelect} className={SCommon.footer_textBuy__decor}> {availableDescr[availableDescr.length - 1]}</span>\r\n                </div> : <div className={SCommon.footer_textOutOff__decor}><span>{props.card.data.descriptions.outOff.footer}</span></div>}\r\n        </div>\r\n    )\r\n}\r\n","import React, {FC} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {CardType} from \"./Redux/Reducers/cardReducer\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"./Redux/store\";\nimport {Card} from \"./Components/card\";\nimport SCommon from \"./common.module.css\"\nimport BG from \"./img/background.png\"\n\ntype PropsType = {\n    cards: Array<CardType>\n}\n\n\nexport const App: FC<PropsType> = (props) => {\n    const Cards = props.cards.map( el => <Card key={el.id} card={el}/>)\n    return (\n        <div className={SCommon.container__width}>\n            <div className={`${SCommon.header_text__center}`}>\n                <span className={`${SCommon.header_text__params}`}>Ты сегодня покормил кота?</span>\n            </div>\n            <div className={SCommon.display__flex}>\n                {Cards}\n            </div>\n        </div>\n    );\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        cards: state.cardReducer.cards\n    }\n}\n\nexport const AppWrapper = connect(mapStateToProps, {})(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://SomeUrl.ru/'\r\n})\r\n\r\nexport const api = {\r\n    uploadCards() {\r\n        return instance.get('cards').then( response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n","import {ThunkAction} from \"redux-thunk\";\r\nimport {AppStateType, InferActionsTypes} from \"../store\";\r\nimport {api} from \"../api\";\r\nimport Cat from \"../../img/cat.png\"\r\n\r\n\r\n// Данные экшены, санки и редюсер в данном тестовом нигде не используются, они предназначены для демонстрации стиля\r\n// написания и в частности владения тайпскриптом\r\ntype ActionCardType = InferActionsTypes<typeof actionsCard>\r\ntype ThunkCardType = ThunkAction<Promise<void>, AppStateType, unknown, ActionCardType>\r\n\r\nexport const actionsCard = {\r\n    uploadCards: (data: Array<CardType>) => ({type: 'cardReducer/uploadCards', data} as const)\r\n}\r\n\r\n\r\nexport const uploadCardsThunk = (): ThunkCardType => {\r\n    return async (dispatch) => {\r\n        const data = await api.uploadCards()\r\n        dispatch(actionsCard.uploadCards(data))\r\n    }\r\n}\r\n\r\n\r\nexport type CardType = {\r\n    id: number\r\n    data: {\r\n        name: string\r\n        taste: string\r\n        portions: number\r\n        gifts: Array<string>\r\n        weight: string\r\n        unit: string\r\n        photo: string\r\n        descriptions: {\r\n            available: {\r\n                header: string\r\n                footer: string\r\n            }\r\n            selected: {\r\n                header: string\r\n                hover: string\r\n                footer: string\r\n            }\r\n            outOff: {\r\n                header: string\r\n                footer: string\r\n            }\r\n        }\r\n    }\r\n    isAvailable: boolean\r\n}\r\n\r\nlet initialState = {\r\n    cards: [\r\n        {\r\n            id: 0,\r\n            data: {\r\n                name: 'Нямушка',\r\n                taste: 'С фуа-гра',\r\n                portions: 10,\r\n                gifts: ['Мышь в подарок'],\r\n                weight: '0,5',\r\n                unit: 'кг',\r\n                photo: Cat,\r\n                descriptions: {\r\n                    available: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Чего сидишь? Порадуй коте, купи'\r\n                    },\r\n                    selected: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        hover: 'Котэ не одобряет?',\r\n                        footer: 'Печень утки разварная с артишоками.'\r\n                    },\r\n                    outOff: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Печалька, с фуа-гра закончился.'\r\n                    }\r\n                },\r\n            },\r\n            isAvailable: true\r\n        },\r\n        {\r\n            id: 1,\r\n            data: {\r\n                name: 'Нямушка',\r\n                taste: 'С рыбой',\r\n                portions: 40,\r\n                gifts: ['2 мыши в подарок'],\r\n                weight: '2',\r\n                unit: 'кг',\r\n                photo: Cat,\r\n                descriptions: {\r\n                    available: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Чего сидишь? Порадуй коте, купи.'\r\n                    },\r\n                    selected: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        hover: 'Котэ не одобряет?',\r\n                        footer: 'Головы щучьи с чесноком да свежайшая сёмгушка.'\r\n                    },\r\n                    outOff: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Печалька, с рыбой закончился.'\r\n                    }\r\n                },\r\n            },\r\n            isAvailable: true\r\n        },\r\n        {\r\n            id: 2,\r\n            data: {\r\n                name: 'Нямушка',\r\n                taste: 'С курой',\r\n                portions: 100,\r\n                gifts: ['5 мышей в подарок', 'Заказчик доволен', 'Заказчик сыт', 'Заказчик не ссыт в тапки'],\r\n                weight: '5',\r\n                unit: 'кг',\r\n                photo: Cat,\r\n                descriptions: {\r\n                    available: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Чего сидишь? Порадуй коте, купи.'\r\n                    },\r\n                    selected: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        hover: 'Котэ не одобряет?',\r\n                        footer: 'Филе цыплят с трюфилями в бульоне.'\r\n                    },\r\n                    outOff: {\r\n                        header: 'Сказочное заморствое лакомство',\r\n                        footer: 'Печалька, с курой закончился.'\r\n                    }\r\n                },\r\n            },\r\n            isAvailable: false\r\n        },\r\n    ] as Array<CardType>\r\n}\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\nexport const cartInstructions = (state = initialState, action: ActionCardType): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"cardReducer/uploadCards\":\r\n            return {...state, cards: action.data}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {cartInstructions} from \"./Reducers/cardReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nlet allReducers = combineReducers({\r\n    cardReducer: cartInstructions\r\n})\r\n\r\ntype ReducersType = typeof allReducers\r\nexport type AppStateType = ReturnType<ReducersType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[]) => any}> = ReturnType<PropertiesTypes<T>>\r\n\r\nexport const store = createStore(allReducers, applyMiddleware(thunk))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {AppWrapper} from './App';\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport {store} from \"./Redux/store\";\nimport SCommon from \"./common.module.css\"\n\nReactDOM.render(\n    <Provider store={store}>\n        <div>\n            <AppWrapper />\n        </div>\n    </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/cat.a3250c59.png\";"],"sourceRoot":""}